version: 2

project_name: coredhcp
before:
  hooks:
  - go install github.com/coredhcp/coredhcp/cmds/coredhcp-generator@latest
  - coredhcp-generator -t generator/coredhcp.go.template -f generator/plugins.txt github.com/OpenCHAMI/coresmd/coresmd github.com/OpenCHAMI/coresmd/bootloop -o coredhcp/coredhcp.go
  - go mod tidy

builds:
  - id: coredhcp
    main: ./coredhcp/
    goos:
      - linux
    goarch:
      - amd64
      - arm64
    goamd64:
      - v3

    # If you want to build this locally, you can set the following environment variables:
    # export GIT_STATE=$(if git diff-index --quiet HEAD --; then echo 'clean'; else echo 'dirty'; fi)
    # export BUILD_HOST=$(hostname)
    # export GO_VERSION=$(go version | awk '{print $3}')
    # export BUILD_USER=$(whoami)
    ldflags:
      - "-s -w -X main.GitCommit={{.Commit}} \
         -X main.BuildTime={{.Timestamp}} \
         -X main.Version={{.Version}} \
         -X main.GitBranch={{.Branch}} \
         -X main.GitTag={{.Tag}} \
         -X main.GitState={{ .Env.GIT_STATE }} \
         -X main.BuildHost={{ .Env.BUILD_HOST }} \
         -X main.GoVersion={{ .Env.GO_VERSION }} \
         -X main.BuildUser={{ .Env.BUILD_USER }} "
    binary: coredhcp
    env:
      # The bootloop plugin uses sqlite3 which requires CGO.
      - CGO_ENABLED=1
      - >-
        CC={{- if eq .Os "linux" -}}
            {{- if eq .Arch "amd64" -}}gcc{{- else -}}aarch64-linux-gnu-gcc{{- end -}}
        {{- end }}


dockers:
  - image_templates:
      - &amd64_linux_image ghcr.io/openchami/{{.ProjectName}}:{{ .Tag }}-amd64
      - ghcr.io/openchami/{{.ProjectName}}:{{ .Major }}-amd64
      - ghcr.io/openchami/{{.ProjectName}}:{{ .Major }}.{{ .Minor }}-amd64
    use: buildx
    build_flag_templates:
      - "--pull"
      - "--platform=linux/amd64"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
    goarch: amd64
    goamd64: v3
    extra_files:
      - LICENSE
      - README.md

  - image_templates:
      - &arm64v8_linux_image ghcr.io/openchami/{{.ProjectName}}:{{ .Tag }}-arm64
      - ghcr.io/openchami/{{.ProjectName}}:{{ .Major }}-arm64
      - ghcr.io/openchami/{{.ProjectName}}:{{ .Major }}.{{ .Minor }}-arm64
    use: buildx
    build_flag_templates:
      - "--pull"
      - "--platform=linux/arm64"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
    extra_files:
      - README.md
      - LICENSE
    goarch: arm64

docker_manifests:
  - name_template: "ghcr.io/openchami/{{.ProjectName}}:latest"
    image_templates:
      - *amd64_linux_image
      - *arm64v8_linux_image

  - name_template: "ghcr.io/openchami/{{.ProjectName}}:{{ .Tag }}"
    image_templates:
      - *amd64_linux_image
      - *arm64v8_linux_image

  - name_template: "ghcr.io/openchami/{{.ProjectName}}:{{ .Major }}"
    image_templates:
      - *amd64_linux_image
      - *arm64v8_linux_image

  - name_template: "ghcr.io/openchami/{{.ProjectName}}:{{ .Major }}.{{ .Minor }}"
    image_templates:
      - *amd64_linux_image
      - *arm64v8_linux_image

